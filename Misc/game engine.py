
import os


#map
dungeonMap = [ [" "," "," "," ","0","0","0","0","0","0","0","0","0"," "," "," "," "],
               [" "," "," "," ","0",".",".","0",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".","0","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".","0",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".","0",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
               [" "," "," "," ","0","0","0","0","0","0","0","0","0"," "," "," "," "],
               [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
               [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
               [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
               [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
               [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
               [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "]]   


playerMap =  [[" "," "," "," ","0","0","0","0","0","0","0","0","0"," "," "," "," "],
              [" "," "," "," ","0",".",".","0",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".","0","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".","S","0",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".","0",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0",".",".",".",".",".",".",".","0"," "," "," "," "],
              [" "," "," "," ","0","0","0","0","0","0","0","0","0"," "," "," "," "],
              [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
              [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
              [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
              [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
              [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "],
              [" "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "," "]]   
          



x = 7
y = 4

def displayMapAround(maps, x, y):
    max_y = len(maps) - 1
    max_x = len(maps[0]) - 1

    y0 = max(0, y - 7)
    y1 = min(max_y, y + 7)         # inclusive row limit; we'll use +1 in range()

    x0 = max(0, x - 4)
    # end-exclusive slice bound matching the original x+5 (clamped safely)
    x1 = min(max_x + 1, x + 5)

    for yy in range(y0, y1 + 1):   # inclusive rows, total up to 15 lines
        print(maps[yy][x0:x1])     # end-exclusive, total up to 9 columns



#Displaying the map
def displayMap(maps):
    for y in range(len(maps)):
        print(maps[y])

os.system("mode con cols=150 lines=50")

#selecting a map
mapChoice = dungeonMap

max_y = len(mapChoice) - 1
max_x = len(mapChoice[0]) - 1

displayMapAround(playerMap,x,y)

#initialising the players position
position = mapChoice[y][x]



print(mapChoice[y][x])
while position != "E":
    print("\033c", end="")
    displayMapAround(playerMap,x,y)
    #displayMap(playerMap)
    playerMap[y][x] = "."
    movement = input("W,S,D,A,MAP").upper()

    nx, ny = x, y
    if movement == "W":
        ny = y - 1
        
    elif movement == "S":
        ny = y + 1
        
    elif movement == "D":
        nx = x + 1
        
    elif movement == "A":
        nx = x - 1
    
    elif movement == "MAP":
        displayMap(playerMap)
        playerMap[y][x] = "S"
        continue

    nx = max(0, min(max_x, nx))
    ny = max(0, min(max_y, ny))

    tile = mapChoice[ny][nx]
    
    if tile in {"0", "1"}:
        print("You hit a wall, you stumble in the darkness back to your previous position...")
    else:
        x, y = nx, ny

    position = mapChoice[y][x]
    playerMap[y][x] = "S"
        



